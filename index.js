import ExcelJS from 'exceljs'
import { readFile, writeFile } from 'fs/promises'

// -------------------------- FILE READING ----------------------------

// Initialize Players
function loadPlayers(workbook) {
    let players = [];
    let playWorksheet = workbook.getWorksheet("Jojo Bettors")
    
    // Search each row for data in non-empty cells and add into players
    playWorksheet.eachRow(row => {
        if (row._cells[0].value === null) return
        players.push({
            name: row._cells[0].value,
            tong: row._cells[1].value,
            comm: row._cells[2].value,
            bets: []
        })
    })

    return loadPlayerData(players)
}

// Initialize days
function loadDays(workbook) {
    // load player data from specific days
    let dayWorksheets = [];
    let daysRegex = /\b((mon|tue|wed(nes)?|thu(rs)?|fri|sat(ur)?|sun)(day)?)\b/gi

    // Search and add days to dayWorksheets
    // TODO: remove undefined element at the end of dayWorksheets array
    workbook.eachSheet((sheet, id) => {
        if ( (sheet.name !== undefined) && sheet.name.match(daysRegex)) dayWorksheets.push(workbook.getWorksheet(id))
    })
    
    //console.log(dayWorksheets.forEach((s, i) => {console.log(s.name + i)}))
    return dayWorksheets
}

//Loading player bet data
function loadPlayerData(players) {

    let dayWorksheets = loadDays(wb)

    dayWorksheets.forEach(sheet => {
        //Get 1st row headers and get only names found in Jojo Bettors sheet (formula uses data from Jojo Bettors)
        let playerRow = sheet.getRow(1).values;
        playerRow = playerRow.filter((value, index) => {
            if (value.formula?.includes("Jojo Bettors")) {
                value.index = index
                return value
            }
        })

        // Copy every players bets into players.bets
        playerRow.forEach(p => {
            players.forEach(player => {
                // Matching data from playerRow and players
                if (p.result === player.name) {
                    //Access specific columns belonging to each player based on their index
                    let column = sheet.getColumn(p.index)
                    column.eachCell((cell, rowNum) => {
                        if (typeof (cell.value) == "number") {
                            let bet = {};
                            bet.day = sheet.name
                            bet.amount = cell.value;
                            if (sheet.getRow(rowNum).getCell(1).value === 'UNDER') {
                                bet.teamExtra = sheet.getRow(rowNum).getCell(1).value
                                bet.team = sheet.getRow(rowNum - 2).getCell(1).value
                            }
                            else if (sheet.getRow(rowNum).getCell(1).value === "OVER") {
                                bet.teamExtra = sheet.getRow(rowNum).getCell(1).value
                                bet.team = sheet.getRow(rowNum - 3).getCell(1).value
                            }
                            else {
                                bet.team = sheet.getRow(rowNum).getCell(1).value
                            }
                            bet.result = sheet.getRow(rowNum).getCell(3).value
                            player.bets.push(bet)
                        }
                    })
                }
            })
        })
    })
    return players
}

// -------------------------- FILE WRITING ----------------------------

// SUMMARY SHEET SETUP
function summarySetup(workbook) {
    let summarySheet = workbook.addWorksheet('AUTOGENERATED SUMMARY', { views: [{ state: 'frozen', ySplit: 9 }] });
    summarySheet.getRow(9).values = ['Day', 'Bettor', 'Team', 'Result', 'Amount', 'win/loss', 'tong', 'total', 'comm', 'com%']
    summarySheet.getRow(8, 9).fill = {
        type: 'pattern',
        pattern: 'solid',
        bgColor: { argb: 'FFFFFF00' },
        fgColor: { argb: "FFFFFF"}
    };

    summarySheet.getCell("E8").value = { formula: "SUM(E10:E1000)"}
    summarySheet.getCell("F8").value = {formula: "SUM(F10:F1000)"}
    summarySheet.getCell("G8").value = {formula: "SUM(G10:G1000)"}
    summarySheet.getCell("H8").value = {formula: "SUM(H10:H1000)"}
    summarySheet.getCell("I8").value = {formula: "SUM(I10:I1000)"}
    summarySheet.getCell("J8").value = {formula: "SUM(H8:I8)"}
    return summarySheet
}

// Compiles data per row
// TODO: cells dont have formulas implemented yet
function compileData(data) {

    //sheet setup
    let sheet = summarySetup(wb2)
    
    let days = loadDays(wb).map(s => {return s.name})
    let rowIndex = 10
    days.forEach(day => {
        data.forEach(player => {
            player.bets.forEach(bet => {
                if (day == bet.day) {
    
                    // Variables that need calculation / has value based on other cells
                    let winLose = bet.result.includes('lose') ? (bet.amount *-1) : (bet.amount)
                    let team = (bet.team + " " + bet.teamExtra).includes("undefined") ? bet.team : bet.team + " " + bet.teamExtra
                    let tong = bet.result.includes('lose') ? 0 : (winLose * player.tong) 
                    let total = winLose - tong
                    let comm = bet.amount * player.comm
                    let result = total + comm
    
                    // Initialize each row
                    let rowData = [bet.day, player.name, team, bet.result, bet.amount, winLose, tong, total, comm, player.comm, result]
                    sheet.getRow(rowIndex).values = rowData
    
                    // Change com% column values to percentage format
                    sheet.getCell(rowIndex, 10).numFmt = '0.00%'
    
                    // move to next row
                    rowIndex++
                }
            })
        })
    })
}

// -------------------------- DRIVER CODE ----------------------------
//FILE READING

let excelFile = await readFile("public/Sep-12-Basketball.xlsx").catch(err => console.log(err))
const wb = new ExcelJS.Workbook();
await wb.xlsx.load(excelFile);

let players = loadPlayers(wb)

console.log(players[0])

// FILE WRITING
// TODO: WEDNESDAY MIKE FOREIGN 269,000 CELL ISN'T BEING READ CUZ FORMULA

const wb2 = new ExcelJS.Workbook()
compileData(players)

await wb2.xlsx.writeFile("public/test2.xlsx");