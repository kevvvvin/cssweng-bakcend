import ExcelJS from 'exceljs'
import { readFile, writeFile } from 'fs/promises'

//FILE READING

let excelFile = await readFile("public/Sep-12-Basketball.xlsx").catch(err => console.log(err))
const workbook = new ExcelJS.Workbook();
await workbook.xlsx.load(excelFile);

let players = [];
// Initialize Players
let playWorksheet = workbook.getWorksheet("Jojo Bettors")

// Search each row for data in non-empty cells and add into players
playWorksheet.eachRow(row => {
    if (row._cells[0].value === null) return
    players.push({
        name: row._cells[0].value,
        tong: row._cells[1].value,
        comm: row._cells[2].value,
        bets: []
    })
})
//console.log(players)

let dayWorksheets = [];
let daysRegex = /\b((mon|tue|wed(nes)?|thu(rs)?|fri|sat(ur)?|sun)(day)?)\b/gi

// Search and add days to dayWorksheets
workbook.eachSheet((sheet, id) => {
    if ( (sheet !== undefined) && sheet.name.match(daysRegex)) dayWorksheets.push(workbook.getWorksheet(id))
})
// TODO: remove undefined element at the end of dayWorksheets array
//console.log(dayWorksheets.forEach((s, i) => {console.log(s.name + i)})) 


dayWorksheets.forEach(sheet => {
    //Get 1st row headers and get only names found in Jojo Bettors sheet (formula uses data from Jojo Bettors)
    let playerRow = sheet.getRow(1).values;
    playerRow = playerRow.filter((value, index) => {
        if (value.formula?.includes("Jojo Bettors")) {
            value.index = index
            return value
        }
    })

    // Copy every players bets into players.bets
    playerRow.forEach(p => {
        players.forEach(player => {
            // Matching data from playerRow and players
            if (p.result === player.name) {
                //Access specific columns belonging to each player based on their index
                let column = sheet.getColumn(p.index)
                column.eachCell((cell, rowNum) => {
                    if (typeof (cell.value) == "number") {
                        let bet = {};
                        bet.day = sheet.name
                        bet.amount = cell.value;
                        if (sheet.getRow(rowNum).getCell(1).value === 'UNDER') {
                            bet.teamExtra = sheet.getRow(rowNum).getCell(1).value
                            bet.team = sheet.getRow(rowNum - 2).getCell(1).value
                        }
                        else if (sheet.getRow(rowNum).getCell(1).value === "OVER") {
                            bet.teamExtra = sheet.getRow(rowNum).getCell(1).value
                            bet.team = sheet.getRow(rowNum - 3).getCell(1).value
                        }
                        else {
                            bet.team = sheet.getRow(rowNum).getCell(1).value
                        }
                        bet.result = sheet.getRow(rowNum).getCell(3).value
                        player.bets.push(bet)
                    }
                })
            }
        })
    })
})

console.log(players[0])
//console.log(`Loaded ${players.length} players`)

// FILE WRITING

const wb2 = new ExcelJS.Workbook()

let summarySheet = wb2.addWorksheet('AUTOGENERATED SUMMARY', { views: [{ state: 'frozen', ySplit: 9 }] });

summarySheet.getRow(9).values = ['Day', 'Bettor', 'Team', 'Result', 'Amount', 'win/loss', 'tong', 'total', 'comm', 'com%', 'result']
summarySheet.getRow(8, 9).fill = {
    type: 'pattern',
    pattern: 'solid',
    bgColor: { argb: 'FFFFFF00' },
};


let days = dayWorksheets.map(s => {return s.name})
let rowIndex = 10
days.forEach(day => {
    players.forEach(player => {
        player.bets.forEach(bet => {
            if (day == bet.day) {
                let winLose = bet.result.includes('lose') ? (bet.amount *-1) : (bet.amount)
                let team = (bet.team + " " + bet.teamExtra).includes("undefined") ? bet.team : bet.team + " " + bet.teamExtra
                let tong = bet.result.includes('lose') ? 0 : (winLose * player.tong) 
                let total = winLose - tong
                let comm = bet.amount * player.comm
                let result = total + comm

                
                let rowData = [bet.day, player.name, team, bet.result, bet.amount, winLose, tong, total, comm, player.com,  "", result]
                summarySheet.getRow(rowIndex).values = rowData
                summarySheet.getCell(rowIndex, 5).formula = "IF(D10="win",E10,IF(D10="lose",E10*-1,0))"
                rowIndex++
            }
        })
    })
})
    

await wb2.xlsx.writeFile("public/test2.xlsx");