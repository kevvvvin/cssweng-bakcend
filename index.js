import ExcelJS from 'exceljs'
import { readFile, writeFile } from 'fs/promises'

let excelFile = await readFile("public/Sep-12-Basketball.xlsx").catch(err => console.log(err))
const workbook = new ExcelJS.Workbook();
await workbook.xlsx.load(excelFile);

let players = [];
// Initialize Players
let playWorksheet = workbook.getWorksheet("Jojo Bettors")
playWorksheet.eachRow(row => {
    if (row._cells[0].value === null) return
    players.push({
        name: row._cells[0].value,
        tong: row._cells[1].value,
        comm: row._cells[2].value,
        bets: []
    })
})

let dayWorksheets = [];
let daysRegex = /\b((mon|tue|wed(nes)?|thu(rs)?|fri|sat(ur)?|sun)(day)?)\b/gi
workbook.eachSheet((sheet, id) => {
    if (sheet.name.match(daysRegex)) dayWorksheets.push(workbook.getWorksheet(id))
})

dayWorksheets.forEach(sheet => {
    let playerRow = sheet.getRow(1).values;
    playerRow = playerRow.filter((value, index) => {
        if (value.formula?.includes("Jojo Bettors")) {
            value.index = index
            return value
        }
    })
    playerRow.forEach(p => {
        players.forEach(player => {
            if (p.result === player.name) {
                let column = sheet.getColumn(p.index)
                column.eachCell((cell, rowNum) => {
                    if (typeof (cell.value) == "number") {
                        let bet = {};
                        bet.day = sheet.name
                        bet.amount = cell.value;
                        if (sheet.getRow(rowNum).getCell(1).value === 'UNDER') {
                            bet.teamExtra = sheet.getRow(rowNum).getCell(1).value
                            bet.team = sheet.getRow(rowNum - 2).getCell(1).value
                        }
                        else if (sheet.getRow(rowNum).getCell(1).value === "OVER") {
                            bet.teamExtra = sheet.getRow(rowNum).getCell(1).value
                            bet.team = sheet.getRow(rowNum - 3).getCell(1).value
                        }
                        else {
                            bet.team = sheet.getRow(rowNum).getCell(1).value
                        }
                        bet.result = sheet.getRow(rowNum).getCell(3).value
                        player.bets.push(bet)
                    }
                })
            }
        })
    })
})
console.log(`Loaded ${players.length} players`)

let summarySheet = workbook.addWorksheet('AUTOGENERATED SUMMARY', { views: [{ state: 'frozen', ySplit: 9 }] });


summarySheet.getRow(9).values = ['Day', 'Bettor', 'Team', 'Result', 'Amount', 'win/loss', 'tong', 'total', 'comm', 'com%', 'result']
summarySheet.getRow(8, 9).fill = {
    type: 'pattern',
    pattern: 'solid',
    bgColor: { argb: 'FFFFFF00' },
};
console.log(summarySheet);
await workbook.xlsx.writeFile("public/test.xlsx");